name: "Deploy to ECR"
"on":
  push:
    branches:
      - "master"
jobs:
  ci:
    name: "Build Image"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v4"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: user/app:latest
          secrets: |
            BUCKET_NAME=${{ secrets.BUCKET_NAME }}
            BUCKET_REGION=${{ secrets.BUCKET_REGION }}
            PROJECT_KEY=${{ secrets.PROJECT_KEY }}
            S3_MANAGER_KEY=${{ secrets.S3_MANAGER_KEY }}
            S3_MANAGER_SECRET_KEY=${{ secrets.S3_MANAGER_SECRET_KEY }}
            NEXT_PUBLIC_CLOUD_NAME=${{ secrets.NEXT_PUBLIC_CLOUD_NAME }}  

      - name: "Install packages"
        run: |
          npm install
          npm run build
        env:
          BUCKET_NAME : ${{ secrets.BUCKET_NAME }}
          BUCKET_REGION : ${{ secrets.BUCKET_REGION }}
          PROJECT_KEY : ${{ secrets.PROJECT_KEY }}
          S3_MANAGER_KEY : ${{ secrets.S3_MANAGER_KEY }}
          S3_MANAGER_SECRET_KEY : ${{ secrets.S3_MANAGER_SECRET_KEY }}
          NEXT_PUBLIC_CLOUD_NAME : ${{ secrets.NEXT_PUBLIC_CLOUD_NAME }}

  cd:
    name: "Deployment"
    runs-on: "ubuntu-latest"
    needs:
      - ci
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v4"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
